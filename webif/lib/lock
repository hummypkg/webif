#!/mod/bin/jimsh

set ::_lock::locks {}

# For testing, 'ababab' collides with 'b'

proc ::_lock::hash {id} {{hashes {}}} {
	set len [string length $id]
	set hash $len

	for {set i 0} {$i < $len} {incr i} {
		scan [string index $id $i] "%c" asc
		set hash [expr (($hash<<5)^($hash>>27))^$asc];
	}

	set hash [expr (65535 - ($hash % 101))]

	while {[dict exists $hashes $hash] && $hashes($hash) ne $id} {
		#puts "Hash collision."
		if {[incr hash] > 65535} { set hash 32768 }
	}
	set hashes($hash) $id

	return $hash
}

proc acquire_lock {id {timeout 0} {interval 0.2}} {
	set port [::_lock::hash $id]
	incr timeout [clock seconds]

	while {[catch {set socket [\
	    socket stream.server "127.0.0.1:$port"]} msg]} {
		if {[clock seconds] > $timeout} { return 0 }
		sleep $interval
	}

	set ::_lock::locks($id) $socket
	return 1
}

proc release_lock {id} {
	if {![dict exists $::_lock::locks $id]} { return 0 }
	if {[catch {close $::_lock::locks($id)} msg]} {
		#puts "Error releasing lock: $msg"
		return 0
	}
	unset ::_lock::locks($id)
	return 1
}

